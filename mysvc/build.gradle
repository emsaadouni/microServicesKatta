buildscript {
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath 'org.springframework.boot:spring-boot-gradle-plugin:1.5.21.RELEASE'
	}
}

plugins {
	id 'java'
}



apply plugin: 'org.springframework.boot'

group = 'msvcdojo'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

repositories {
	mavenCentral()
}

dependencies {
	classpath("org.flywaydb:flyway-gradle-plugin")
	classpath("mysql:mysql-connector-java:5.1.38")
	apply plugin: 'org.flywaydb.flyway'
	compile group: 'javax.persistence', name: 'javax.persistence-api', version: '2.2'
	compile 'org.springframework.boot:spring-boot-starter-actuator'
	compile("org.springframework.boot:spring-boot-starter-data-jpa")
	compile("org.springframework.boot:spring-boot-starter-data-rest")
	compile group: 'javax.xml.bind', name: 'jaxb-api', version: '2.4.0-b180830.0359'
	runtime("mysql:mysql-connector-java:5.1.38")
	compile("org.springframework.boot:spring-boot-starter-web:1.5.21.RELEASE") {
		exclude group: 'org.springframework.boot', module: 'spring-boot-starter-tomcat'
	}
	compile ('org.springframework.boot:spring-boot-starter-jetty') {
		exclude group: 'org.eclipse.jetty.websocket'
	}
	testCompile 'org.springframework.boot:spring-boot-starter-test'
}
flyway {
	url = 'jdbc:mysql://dockerhost:3306/demo'
	user = 'root'
	password = 'p@ssw0rd'
}

test {
	testLogging {
		afterSuite { desc, result ->
			if (!desc.parent) {
				println "Results: ${result.resultType} (${result.testCount} tests, ${result.successfulTestCount} successes, ${result.failedTestCount} failures, ${result.skippedTestCount} skipped)"
			}
		}
	}
	reports {
		junitXml.enabled = false
		html.enabled = true
	}
}
task prepDocker(type: Copy, dependsOn: assemble) {
	from 'docker'
	into "$buildDir/docker"
	include 'Dockerfile.template'
	rename { file -> 'Dockerfile' }
	expand(project: project, jar: jar )
	doFirst {
		copy {
			from jar
			into "$buildDir/docker"
		}
	}
	doLast {
		println "Docker command: docker build -t ${jar.group}/${jar.baseName}:${jar.version} build/docker"
	}
}